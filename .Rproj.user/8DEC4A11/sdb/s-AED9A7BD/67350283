{
    "contents" : "source(\"dlm_ar_functions.r\")\nsource(\"pl_ar_functions.r\")\nsource(\"pl.r\")\nsource(\"pf_mc_functions.r\")\n\n# Set data and graphics paths\ndpath = \"../data/\"\ngpath = \"../graphs/\"\n\n# Load basis function\nconv = read.csv(paste(dpath,\"basis.csv\",sep=\"\"),header=FALSE)[,1]\nU = cbind(1,conv)\nnt = length(conv)\n\n# Simulate observations from M101, M011, or M010\nbeta = c(750, 15)\nphi = 0.9\nsigma2s = 16\nsigma2m = 9\nFF = rep(1,nt)\nsim = dlm.sim(nt, beta, phi, sigma2s, sigma2m, U, FF)\nwindows()\npar(mfrow=c(3,1),mar=c(5,6,4,2))\nplot(1:nt,sim$y,type=\"l\",main=eval(bquote(expression(paste(\"Simulated from \",M['011'],sep=\"\")))),xlab=expression(t),ylab=expression(y[t]),cex.main=2,cex.lab=2)\nplot(1:nt,conv,type=\"l\",xlab=\"\",ylab=expression(conv[t]),main=substitute(paste(beta[0],\"=\",a0,\",\",beta[1],\"=\",a1,\",\",phi,\"=\",a2,\",\",sigma[s]^2,\"=\",a3,\",\",sigma[m]^2,\"=\",a4),list(a0=sim$true.params$theta[1],a1=sim$true.params$theta[2],a2=sim$true.params$theta[3],a3=sim$true.params$theta[4],a4=sim$true.params$theta[5])),cex.main=2,cex.lab=2)\nplot(0:nt,sim$x,type=\"l\",xlab=\"\",ylab=expression(x[t]),main=\"\",cex.lab=2)\n\n# Fit data to M101 using particle learning\nn = 100\n# abm = ig.mom(sigma2m, 25)\n# abs = ig.mom(sigma2s, 25)\n# prior = list(b0=c(750, 15),B0=matrix(c(10,0,0,10),nr=2), am0=abm[1], bm0=abm[2], phi0=.95, Phi0=.5, as0=abs[1], bs0=abs[2])\n# rprior <- function(j) rprior.pl(prior)\nFF = conv\ndlpred <- function(y, x, suff.x, theta) dlpred.pl(y, x, theta, U, FF)\nrevo <- function(y, x, suff.x, theta) revo.pl(y, x, theta, U, FF)\nrmove <- function(suff.theta) rmove.pl(suff.theta, prior)\nsmap.theta <- function(suff.theta, y, x) smap.theta.pl(suff.theta, y, x, U, FF)\nsmap.state <- function(suff.x, y, theta) smap.state.pl(suff.x, y, theta)\nout = pl(sim$y, dlpred, revo, rprior, rmove, smap.theta, smap.state, n, TRUE, method=\"stratified\", threshold=0.8, nonuniformity=\"ess\", log=F)\nstate.quant = pf.quantile(out$state, out$weight, function(x, j) x, c(.025,.975))\ntheta.quant = pf.quantile(out$theta, out$weight, function(x, j) x, c(.025,.975))\n\n# Fit data to M011 using particle learning\nFF = rep(1,nt)\nabm = ig.mom(sigma2m, 1e6)\nabs = ig.mom(sigma2s, 1e6)\nprior = list(b0=c(750, 15),B0=matrix(c(1e6,0,0,1e6),nr=2), am0=abm[1], bm0=abm[2], phi0=.95, Phi0=10, as0=abs[1], bs0=abs[2])\nrprior <- function(j) rprior.pl(prior)\ndlpred <- function(y, x, suff.x, theta) dlpred.pl(y, x, theta, U, FF)\nrevo <- function(y, x, suff.x, theta) revo.pl(y, x, theta, U, FF)\nrmove <- function(suff.theta) rmove.pl(suff.theta, prior)\nsmap.theta <- function(suff.theta, y, x) smap.theta.pl(suff.theta, y, x, U, FF)\nsmap.state <- function(suff.x, y, theta) smap.state.pl(suff.x, y, theta)\nout2 = pl(sim$y, dlpred, revo, rprior, rmove, smap.theta, smap.state, n, TRUE, method=\"stratified\", threshold=0.8, nonuniformity=\"ess\", log=F)\nstate.quant2 = pf.quantile(out2$state, out2$weight, function(x, j) x, c(.025,.975))\ntheta.quant2 = pf.quantile(out2$theta, out2$weight, function(x, j) x, c(.025,.975))\n\n# Fit data to M010 using particle learning\nFF = rep(1,nt)\ndlpred <- function(y, x, suff.x, theta) dlpred.pl(y, x, theta, U, FF)\nrevo <- function(y, x, suff.x, theta) revo.pl(y, x, theta, U, FF)\nprior2 = list(b0=prior$b0,B0=prior$B0, phi0=prior$phi0, Phi0=prior$Phi0, as0=prior$as0, bs0=prior$bs0)\nrprior <- function(j) rprior.pl(prior2)\nrmove <- function(suff.theta) rmove.pl(suff.theta, prior2)\nsmap.theta <- function(suff.theta, y, x) smap.theta.pl(suff.theta, y, x, U, FF)\nsmap.state <- function(suff.x, y, theta) smap.state.pl(suff.x, y, theta)\nout3 = pl(sim$y, dlpred, revo, rprior, rmove, smap.theta, smap.state, n, TRUE, method=\"stratified\", threshold=0.8, nonuniformity=\"ess\", log=F)\nstate.quant3 = pf.quantile(out3$state, out3$weight, function(x, j) x, c(.025,.975))\ntheta.quant3 = pf.quantile(out3$theta, out3$weight, function(x, j) x, c(.025,.975))\n\n# Plot sequential credible intervals\nwindows(width=15,height=10)\npar(mfrow=c(2,3), mar=c(5,6,4,2)+0.1)\nburn = 10\nymin = apply(theta.quant[-(1:burn),,1], 2, min)\nymax = apply(theta.quant[-(1:burn),,2], 2, max)\nymin2 = apply(theta.quant2[-(1:burn),,1], 2, min)\nymax2 = apply(theta.quant2[-(1:burn),,2], 2, max)\nymin3 = apply(theta.quant3[-(1:burn),,1], 2, min)\nymax3 = apply(theta.quant3[-(1:burn),,2], 2, max)\n\nabm = ig.mom(sigma2m, 1e6)\nabs = ig.mom(sigma2s, 1e6)\nprior = list(b0=c(750, 15),B0=matrix(c(1e6,0,0,1e6),nr=2), am0=abm[1], bm0=abm[2], phi0=.95, Phi0=10, as0=abs[1], bs0=abs[2])\n\nplot(0:nt, rep(sim$true.params$theta[1], nt+1), type=\"l\", col='gray', lwd=2, ylim=c(min(ymin[1],ymin2[1],ymin3[1]),max(ymax[1],ymax2[1],ymax3[1])), xlab=expression(t), ylab=expression(beta[0]), main = substitute(paste(B0['1,1'],\"=\",a0,\",\",B0['2,2'],\"=\",a1,\",\",Phi[0],\"=\",a2),list(a0=round(prior$B0[1,1],2),a1=round(prior$B0[2,2],2),a2=round(prior$Phi0,2))), cex.lab=2)\nmtext(substitute(paste(M['101'],\": \",a0,sep=\"\"),list(a0=round(pf.lmarglik(out),3))),side=3,cex=.85)\nlines(0:nt, theta.quant[,1,1])\nlines(0:nt, theta.quant[,1,2])\nlines(0:nt, theta.quant2[,1,1],col=2)\nlines(0:nt, theta.quant2[,1,2],col=2)\nlines(0:nt, theta.quant3[,1,1],col=4)\nlines(0:nt, theta.quant3[,1,2],col=4)\nplot(0:nt, rep(sim$true.params$theta[2], nt+1), type=\"l\", col='gray', lwd=2, ylim=c(min(ymin[2],ymin2[2],ymin3[2]),max(ymax[2],ymax2[2],ymax3[2])), xlab=\"\", ylab=expression(beta[1]), main = expression(paste(\"Simulated from \",M['011'],sep=\"\")), cex.lab=2, cex.main=2)\nmtext(substitute(paste(M['011'],\": \",a0,sep=\"\"),list(a0=round(pf.lmarglik(out2),3))),side=3,col=2,cex=0.85)\nlines(0:nt, theta.quant[,2,1])\nlines(0:nt, theta.quant[,2,2])\nlines(0:nt, theta.quant2[,2,1],col=2)\nlines(0:nt, theta.quant2[,2,2],col=2)\nlines(0:nt, theta.quant3[,2,1],col=4)\nlines(0:nt, theta.quant3[,2,2],col=4)\nplot(0:nt, rep(sim$true.params$theta[3], nt+1), type=\"l\", col='gray', lwd=2, ylim=c(min(ymin[3],ymin2[3],ymin3[3]),max(ymax[3],ymax2[3],ymax3[3])), xlab=\"\", ylab=expression(phi), main = substitute(paste(a['m0'],\"=\",a3,\",\",b['m0'],\"=\",a4,\",\",a['s0'],\"=\",a5,\",\",b['s0'],\"=\",a6),list(a3=round(prior$am0,2),a4=round(prior$bm0,2),a5=round(prior$as0,2),a6=round(prior$bs0,2))), cex.lab=2)\nmtext(substitute(paste(M['010'],\": \",a0,sep=\"\"),list(a0=round(pf.lmarglik(out3),3))),side=3,col=4,cex=0.85)\nlines(0:nt, theta.quant[,3,1])\nlines(0:nt, theta.quant[,3,2])\nlines(0:nt, theta.quant2[,3,1],col=2)\nlines(0:nt, theta.quant2[,3,2],col=2)\nlines(0:nt, theta.quant3[,3,1],col=4)\nlines(0:nt, theta.quant3[,3,2],col=4)\n\nabm = ig.mom(sigma2m, 25)\nabs = ig.mom(sigma2s, 25)\nprior = list(b0=c(750, 15),B0=matrix(c(10,0,0,10),nr=2), am0=abm[1], bm0=abm[2], phi0=.95, Phi0=.5, as0=abs[1], bs0=abs[2])\n\nplot(0:nt, rep(sim$true.params$theta[4], nt+1), type=\"l\", col='gray', lwd=2, ylim=c(min(ymin[4],ymin2[4],ymin3[4]),max(ymax[4],ymax2[4],ymax3[4])), xlab=\"\", ylab=expression(sigma[s]^2), main = \"\", cex.lab=2)\nmtext(substitute(paste(beta[0],\"=\",a0,\",\",beta[1],\"=\",a1,\",\",phi,\"=\",a2,\",\",sigma[s]^2,\"=\",a3,\",\",sigma[m]^2,\"=\",a4),list(a0=sim$true.params$theta[1],a1=sim$true.params$theta[2],a2=sim$true.params$theta[3],a3=sim$true.params$theta[4],a4=sim$true.params$theta[5])),side=3,cex=0.85)\nlines(0:nt, theta.quant[,4,1])\nlines(0:nt, theta.quant[,4,2])\nlines(0:nt, theta.quant2[,4,1],col=2)\nlines(0:nt, theta.quant2[,4,2],col=2)\nlines(0:nt, theta.quant3[,4,1],col=4)\nlines(0:nt, theta.quant3[,4,2],col=4)\nplot(0:nt, rep(sim$true.params$theta[5], nt+1), type=\"l\", col='gray', lwd=2, ylim=c(min(ymin[5],ymin2[5],ymin3[5]),max(ymax[5],ymax2[5],ymax3[5])), xlab=\"\", ylab=expression(sigma[m]^2), main = \"\", cex.lab=2)\nmtext(substitute(paste(b0[1],\"=\",a0,\",\",b0[2],\"=\",a1,\",\",B0['1,1'],\"=\",a2,\",\",B0['2,2'],\"=\",a3,\",\",phi[0],\"=\",a4,\",\",Phi[0],\"=\",a5),list(a0=prior$b0[1],a1=prior$b0[2],a2=prior$B0[1,1],a3=prior$B0[2,2],a4=prior$phi0,a5=prior$Phi0)),side=3,cex=0.85)\nlines(0:nt, theta.quant[,5,1])\nlines(0:nt, theta.quant[,5,2])\nlines(0:nt, theta.quant2[,5,1],col=2)\nlines(0:nt, theta.quant2[,5,2],col=2)\nlines(0:nt, theta.quant3[,5,1],col=4)\nlines(0:nt, theta.quant3[,5,2],col=4)\nplot(0:nt, sim$x, type=\"l\", col='gray', lwd=2, ylim=c(min(sim$x,state.quant[-(1:burn),1,1],state.quant2[-(1:burn),1,1],state.quant3[-(1:burn),1,1]),max(sim$x,state.quant[-(1:burn),1,2],state.quant2[-(1:burn),1,2],state.quant3[-(1:burn),1,2])), xlab=\"\", ylab=expression(x[t]), main = \"\", cex.lab=2)\nmtext(substitute(paste(a['m0'],\"=\",a0,\",\",b['m0'],\"=\",a1,\",\",a['s0'],\"=\",a2,\",\",b['s0'],\"=\",a3),list(a0=round(prior$am0,2),a1=round(prior$bm0,2),a2=round(prior$as0,2),a3=round(prior$bs0,2))),side=3,cex=0.85)\nlines(0:nt, state.quant[,1,1])\nlines(0:nt, state.quant[,1,2])\nlines(0:nt, state.quant2[,1,1],col=2)\nlines(0:nt, state.quant2[,1,2],col=2)\nlines(0:nt, state.quant3[,1,1],col=4)\nlines(0:nt, state.quant3[,1,2],col=4)\n",
    "created" : 1402966376009.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "371023381",
    "id" : "67350283",
    "lastKnownWriteTime" : 1402998260,
    "path" : "~/UCSB - Research/fmri/code/pl_ar_test.r",
    "project_path" : "pl_ar_test.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}