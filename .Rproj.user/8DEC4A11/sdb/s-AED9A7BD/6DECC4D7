{
    "contents" : "# Function to simulate nt + 1 univariate states (x_t) and nt univariate observations (y_t) from an AR(1) dlm\n# y_t = U_t*beta + F_t*x_t + v_t, v_t iid N(0,sigma2m)\n# x_t = phi*x_t-1 + w_t, w_t iid N(0,sigma2s)\n# U is an nt by d matrix of regression covariates\n# FF is an nt length vector of coefficients for the state\ndlm.sim <- function(nt, beta, phi, sigma2s, sigma2m, U, FF, x0=0)\n{\n  y = numeric(nt)\n  x = numeric(nt+1); x[1] = x0\n  v = rnorm(nt, 0, sqrt(sigma2m))\n  w = rnorm(nt, 0, sqrt(sigma2s))\n  for(i in 1:nt)\n  {\n    x[i+1] = phi*x[i] + w[i]\n    y[i] = t(U[i,])%*%beta + FF[i]*x[i+1] + v[i]\n  }\n  return(list(y=y,x=x,true.params=list(theta=c(beta,phi,sigma2s,sigma2m),U=U,FF=FF)))\n}\n\n# Function to build a 'dlm' object for a regression model with AR(1) error structure\n# No constraint on autocorrelation parameter phi\n# Assume univariate data\n# par = c(phi, log(sigma2s), log(sigma2m))\n# U is an nt by d matrix of regression covariates\n# f is an nt length vector of coefficients for the state\n\nbuild.ar1 <- function(par, U, f)\n{\n  require(dlm)\n  d = dim(U)[2]\n  nt = dim(U)[1]\n  FF = matrix(rep(0,d+1),nr=1)\n  JFF = matrix(1:(d+1),nr=1)\n  X = cbind(U,f)\n  V = exp(par[3])\n  GG = diag(d+1); GG[d+1,d+1] = par[1]\n  W = 0*diag(d+1); W[d+1,d+1] = exp(par[2])\n  m0 = rep(0,d+1)\n  C0 = 1e6*diag(d+1); C0[d+1,d+1] = 0\n  mod = dlm(FF=FF,V=matrix(exp(par[3])),GG=GG,W=W,m0=m0,C0=C0,JFF=JFF,X=X)\n  return(mod)\n}",
    "created" : 1402561677820.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1247617416",
    "id" : "6DECC4D7",
    "lastKnownWriteTime" : 1402966357,
    "path" : "~/UCSB - Research/fmri/code/dlm_ar_functions.r",
    "project_path" : "dlm_ar_functions.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}